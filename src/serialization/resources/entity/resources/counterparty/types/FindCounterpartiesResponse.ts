/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Mercoa from "../../../../../../api";
import * as core from "../../../../../../core";

export const FindCounterpartiesResponse: core.serialization.ObjectSchema<
    serializers.entity.FindCounterpartiesResponse.Raw,
    Mercoa.entity.FindCounterpartiesResponse
> = core.serialization.object({
    entityCounterparties: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../../..")).entity.CounterpartyResponse)
    ),
    platformCounterparties: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../../..")).entity.CounterpartyResponse)
    ),
    mercoaCounterparties: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../../..")).entity.CounterpartyResponse)
    ),
});

export declare namespace FindCounterpartiesResponse {
    interface Raw {
        entityCounterparties: serializers.entity.CounterpartyResponse.Raw[];
        platformCounterparties: serializers.entity.CounterpartyResponse.Raw[];
        mercoaCounterparties: serializers.entity.CounterpartyResponse.Raw[];
    }
}
