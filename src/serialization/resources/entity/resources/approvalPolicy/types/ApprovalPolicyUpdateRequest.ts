/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Mercoa from "../../../../../../api";
import * as core from "../../../../../../core";

export const ApprovalPolicyUpdateRequest: core.serialization.ObjectSchema<
    serializers.entity.ApprovalPolicyUpdateRequest.Raw,
    Mercoa.entity.ApprovalPolicyUpdateRequest
> = core.serialization.object({
    trigger: core.serialization.lazy(async () => (await import("../../../../..")).entity.Trigger).optional(),
    rule: core.serialization.lazy(async () => (await import("../../../../..")).entity.Rule).optional(),
    upstreamPolicyId: core.serialization.lazy(async () => (await import("../../../../..")).ApprovalPolicyId).optional(),
});

export declare namespace ApprovalPolicyUpdateRequest {
    interface Raw {
        trigger?: serializers.entity.Trigger.Raw | null;
        rule?: serializers.entity.Rule.Raw | null;
        upstreamPolicyId?: serializers.ApprovalPolicyId.Raw | null;
    }
}
