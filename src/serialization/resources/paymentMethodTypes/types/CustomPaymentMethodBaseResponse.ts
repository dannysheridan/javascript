/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const CustomPaymentMethodBaseResponse: core.serialization.ObjectSchema<
    serializers.CustomPaymentMethodBaseResponse.Raw,
    Mercoa.CustomPaymentMethodBaseResponse
> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../..")).PaymentMethodId),
    foreignId: core.serialization.string(),
    accountName: core.serialization.string().optional(),
    accountNumber: core.serialization.string().optional(),
    schemaId: core.serialization.lazy(async () => (await import("../../..")).PaymentMethodSchemaId),
    schema: core.serialization.lazyObject(async () => (await import("../../..")).PaymentMethodSchemaResponse),
    data: core.serialization.record(core.serialization.string(), core.serialization.string()),
    supportedCurrencies: core.serialization.list(
        core.serialization.lazy(async () => (await import("../../..")).CurrencyCode)
    ),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace CustomPaymentMethodBaseResponse {
    interface Raw {
        id: serializers.PaymentMethodId.Raw;
        foreignId: string;
        accountName?: string | null;
        accountNumber?: string | null;
        schemaId: serializers.PaymentMethodSchemaId.Raw;
        schema: serializers.PaymentMethodSchemaResponse.Raw;
        data: Record<string, string>;
        supportedCurrencies: serializers.CurrencyCode.Raw[];
        createdAt: string;
        updatedAt: string;
    }
}
