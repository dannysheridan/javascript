/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const CheckBaseResponse: core.serialization.ObjectSchema<
    serializers.CheckBaseResponse.Raw,
    Mercoa.CheckBaseResponse
> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../..")).PaymentMethodId),
    payToTheOrderOf: core.serialization.string(),
    addressLine1: core.serialization.string(),
    addressLine2: core.serialization.string().optional(),
    city: core.serialization.string(),
    stateOrProvince: core.serialization.string(),
    postalCode: core.serialization.string(),
    country: core.serialization.string(),
    supportedCurrencies: core.serialization.list(
        core.serialization.lazy(async () => (await import("../../..")).CurrencyCode)
    ),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace CheckBaseResponse {
    interface Raw {
        id: serializers.PaymentMethodId.Raw;
        payToTheOrderOf: string;
        addressLine1: string;
        addressLine2?: string | null;
        city: string;
        stateOrProvince: string;
        postalCode: string;
        country: string;
        supportedCurrencies: serializers.CurrencyCode.Raw[];
        createdAt: string;
        updatedAt: string;
    }
}
