/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Mercoa } from "@mercoa/javascript";
import * as core from "../../../../core";

export const CustomPaymentMethodResponse: core.serialization.ObjectSchema<
    serializers.CustomPaymentMethodResponse.Raw,
    Mercoa.CustomPaymentMethodResponse
> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../..")).CustomId),
    foreignId: core.serialization.string(),
    accountName: core.serialization.string().optional(),
    accountNumber: core.serialization.string().optional(),
    schemaId: core.serialization.lazy(async () => (await import("../../..")).PaymentMethodSchemaId),
    schema: core.serialization.lazyObject(async () => (await import("../../..")).PaymentMethodSchemaResponse),
    data: core.serialization.record(core.serialization.string(), core.serialization.string()),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace CustomPaymentMethodResponse {
    interface Raw {
        id: serializers.CustomId.Raw;
        foreignId: string;
        accountName?: string | null;
        accountNumber?: string | null;
        schemaId: serializers.PaymentMethodSchemaId.Raw;
        schema: serializers.PaymentMethodSchemaResponse.Raw;
        data: Record<string, string>;
        createdAt: string;
        updatedAt: string;
    }
}
