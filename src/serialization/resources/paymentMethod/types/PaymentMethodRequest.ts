/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Mercoa } from "@mercoa/javascript";
import * as core from "../../../../core";

export const PaymentMethodRequest: core.serialization.ObjectSchema<
    serializers.PaymentMethodRequest.Raw,
    Mercoa.PaymentMethodRequest
> = core.serialization.object({
    type: core.serialization.lazy(async () => (await import("../../..")).PaymentMethodType),
    bankAccount: core.serialization.lazyObject(async () => (await import("../../..")).BankAccountRequest).optional(),
    check: core.serialization.lazyObject(async () => (await import("../../..")).CheckRequest).optional(),
    card: core.serialization.lazyObject(async () => (await import("../../..")).CardRequest).optional(),
    custom: core.serialization.lazyObject(async () => (await import("../../..")).CustomPaymentMethodRequest).optional(),
});

export declare namespace PaymentMethodRequest {
    interface Raw {
        type: serializers.PaymentMethodType.Raw;
        bankAccount?: serializers.BankAccountRequest.Raw | null;
        check?: serializers.CheckRequest.Raw | null;
        card?: serializers.CardRequest.Raw | null;
        custom?: serializers.CustomPaymentMethodRequest.Raw | null;
    }
}
