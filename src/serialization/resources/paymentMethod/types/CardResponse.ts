/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Mercoa } from "@mercoa/javascript";
import * as core from "../../../../core";

export const CardResponse: core.serialization.ObjectSchema<serializers.CardResponse.Raw, Mercoa.CardResponse> =
    core.serialization.object({
        id: core.serialization.lazy(async () => (await import("../../..")).CardId),
        type: core.serialization.lazy(async () => (await import("../../..")).CardType),
        brand: core.serialization.lazy(async () => (await import("../../..")).CardBrand),
        lastFour: core.serialization.string(),
        expMonth: core.serialization.string(),
        expYear: core.serialization.string(),
        createdAt: core.serialization.date(),
        updatedAt: core.serialization.date(),
    });

export declare namespace CardResponse {
    interface Raw {
        id: serializers.CardId.Raw;
        type: serializers.CardType.Raw;
        brand: serializers.CardBrand.Raw;
        lastFour: string;
        expMonth: string;
        expYear: string;
        createdAt: string;
        updatedAt: string;
    }
}
