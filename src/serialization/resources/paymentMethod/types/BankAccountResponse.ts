/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Mercoa } from "@mercoa/javascript";
import * as core from "../../../../core";

export const BankAccountResponse: core.serialization.ObjectSchema<
    serializers.BankAccountResponse.Raw,
    Mercoa.BankAccountResponse
> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../..")).BankAccountId),
    bankName: core.serialization.string(),
    routingNumber: core.serialization.string(),
    accountNumber: core.serialization.string(),
    accountType: core.serialization.lazy(async () => (await import("../../..")).BankType),
    status: core.serialization.lazy(async () => (await import("../../..")).BankStatus),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace BankAccountResponse {
    interface Raw {
        id: serializers.BankAccountId.Raw;
        bankName: string;
        routingNumber: string;
        accountNumber: string;
        accountType: serializers.BankType.Raw;
        status: serializers.BankStatus.Raw;
        createdAt: string;
        updatedAt: string;
    }
}
