/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Mercoa } from "@mercoa/javascript";
import * as core from "../../../../core";

export const OrganizationResponse: core.serialization.ObjectSchema<
    serializers.OrganizationResponse.Raw,
    Mercoa.OrganizationResponse
> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../..")).OrganizationId),
    sandbox: core.serialization.boolean(),
    name: core.serialization.string(),
    logoUrl: core.serialization.string().optional(),
    websiteUrl: core.serialization.string().optional(),
    supportEmail: core.serialization.string().optional(),
    paymentMethods: core.serialization
        .lazyObject(async () => (await import("../../..")).PaymentMethodsResponse)
        .optional(),
    emailProvider: core.serialization
        .lazyObject(async () => (await import("../../..")).EmailProviderResponse)
        .optional(),
});

export declare namespace OrganizationResponse {
    interface Raw {
        id: serializers.OrganizationId.Raw;
        sandbox: boolean;
        name: string;
        logoUrl?: string | null;
        websiteUrl?: string | null;
        supportEmail?: string | null;
        paymentMethods?: serializers.PaymentMethodsResponse.Raw | null;
        emailProvider?: serializers.EmailProviderResponse.Raw | null;
    }
}
