/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const InvoiceApproverResponse: core.serialization.ObjectSchema<
    serializers.invoice.InvoiceApproverResponse.Raw,
    Mercoa.invoice.InvoiceApproverResponse
> = core.serialization.object({
    assignedUserId: core.serialization.lazy(async () => (await import("../../..")).EntityUserId).optional(),
    action: core.serialization.lazy(async () => (await import("../../..")).invoice.ApproverAction),
    eligibleRoles: core.serialization.list(core.serialization.string()),
    eligibleUserIds: core.serialization.list(
        core.serialization.lazy(async () => (await import("../../..")).EntityUserId)
    ),
    date: core.serialization.date(),
});

export declare namespace InvoiceApproverResponse {
    interface Raw {
        assignedUserId?: serializers.EntityUserId.Raw | null;
        action: serializers.invoice.ApproverAction.Raw;
        eligibleRoles: string[];
        eligibleUserIds: serializers.EntityUserId.Raw[];
        date: string;
    }
}
