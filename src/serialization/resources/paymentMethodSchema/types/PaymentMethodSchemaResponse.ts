/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Mercoa } from "@mercoa/javascript";
import * as core from "../../../../core";

export const PaymentMethodSchemaResponse: core.serialization.ObjectSchema<
    serializers.PaymentMethodSchemaResponse.Raw,
    Mercoa.PaymentMethodSchemaResponse
> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../..")).PaymentMethodSchemaId),
    name: core.serialization.string(),
    isSource: core.serialization.boolean(),
    isDestination: core.serialization.boolean(),
    fields: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../..")).PaymentMethodSchemaField)
    ),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace PaymentMethodSchemaResponse {
    interface Raw {
        id: serializers.PaymentMethodSchemaId.Raw;
        name: string;
        isSource: boolean;
        isDestination: boolean;
        fields: serializers.PaymentMethodSchemaField.Raw[];
        createdAt: string;
        updatedAt: string;
    }
}
