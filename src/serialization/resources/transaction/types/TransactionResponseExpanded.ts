/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const TransactionResponseExpanded: core.serialization.ObjectSchema<
    serializers.TransactionResponseExpanded.Raw,
    Mercoa.TransactionResponseExpanded
> = core.serialization
    .object({
        invoiceId: core.serialization.lazy(async () => (await import("../../..")).InvoiceId),
        deductionDate: core.serialization.date().optional(),
        dueDate: core.serialization.date().optional(),
        payer: core.serialization.lazyObject(async () => (await import("../../..")).EntityResponse).optional(),
        vendor: core.serialization.lazyObject(async () => (await import("../../..")).EntityResponse).optional(),
        paymentSource: core.serialization.lazy(async () => (await import("../../..")).PaymentMethodResponse).optional(),
        paymentDestination: core.serialization
            .lazy(async () => (await import("../../..")).PaymentMethodResponse)
            .optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).TransactionResponse));

export declare namespace TransactionResponseExpanded {
    interface Raw extends serializers.TransactionResponse.Raw {
        invoiceId: serializers.InvoiceId.Raw;
        deductionDate?: string | null;
        dueDate?: string | null;
        payer?: serializers.EntityResponse.Raw | null;
        vendor?: serializers.EntityResponse.Raw | null;
        paymentSource?: serializers.PaymentMethodResponse.Raw | null;
        paymentDestination?: serializers.PaymentMethodResponse.Raw | null;
    }
}
