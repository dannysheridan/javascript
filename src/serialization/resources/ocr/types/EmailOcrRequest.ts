/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Mercoa } from "@mercoa/javascript";
import * as core from "../../../../core";

export const EmailOcrRequest: core.serialization.ObjectSchema<serializers.EmailOcrRequest.Raw, Mercoa.EmailOcrRequest> =
    core.serialization.object({
        uuid: core.serialization.property("Uuid", core.serialization.list(core.serialization.string())),
        messageId: core.serialization.property("MessageId", core.serialization.string()),
        inReplyTo: core.serialization.property("InReplyTo", core.serialization.string().optional()),
        from: core.serialization.property(
            "From",
            core.serialization.lazyObject(async () => (await import("../../..")).OcrMailbox)
        ),
        to: core.serialization.property(
            "To",
            core.serialization.list(core.serialization.lazyObject(async () => (await import("../../..")).OcrMailbox))
        ),
        cc: core.serialization.property(
            "Cc",
            core.serialization.list(core.serialization.lazyObject(async () => (await import("../../..")).OcrMailbox))
        ),
        replyTo: core.serialization.property(
            "ReplyTo",
            core.serialization.lazyObject(async () => (await import("../../..")).OcrMailbox).optional()
        ),
        sentAtDate: core.serialization.property("SentAtDate", core.serialization.string()),
        subject: core.serialization.property("Subject", core.serialization.string()),
        attachments: core.serialization.property(
            "Attachments",
            core.serialization.list(core.serialization.lazyObject(async () => (await import("../../..")).Attachments))
        ),
        headers: core.serialization.property("Headers", core.serialization.unknown()),
        spamScore: core.serialization.property("SpamScore", core.serialization.number()),
        extractedMarkdownMessage: core.serialization.property(
            "ExtractedMarkdownMessage",
            core.serialization.string().optional()
        ),
        extractedMarkdownSignature: core.serialization.property(
            "ExtractedMarkdownSignature",
            core.serialization.string().optional()
        ),
        rawHtmlBody: core.serialization.property("RawHtmlBody", core.serialization.string().optional()),
        rawTextBody: core.serialization.property("RawTextBody", core.serialization.string().optional()),
    });

export declare namespace EmailOcrRequest {
    interface Raw {
        Uuid: string[];
        MessageId: string;
        InReplyTo?: string | null;
        From: serializers.OcrMailbox.Raw;
        To: serializers.OcrMailbox.Raw[];
        Cc: serializers.OcrMailbox.Raw[];
        ReplyTo?: serializers.OcrMailbox.Raw | null;
        SentAtDate: string;
        Subject: string;
        Attachments: serializers.Attachments.Raw[];
        Headers?: unknown;
        SpamScore: number;
        ExtractedMarkdownMessage?: string | null;
        ExtractedMarkdownSignature?: string | null;
        RawHtmlBody?: string | null;
        RawTextBody?: string | null;
    }
}
